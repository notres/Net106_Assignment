@page "/dangnhap"
@using _2.Data.ModelClient.DangNhap;
@using _2.Data.ModelsClass;
@using _4.Client.IServices;
@using Microsoft.JSInterop;
@inject IJSRuntime JSRuntime
@inject IAllServices services
@inject NavigationManager navigation
<EditForm Model="login" OnValidSubmit="OnLogin">
    <DataAnnotationsValidator />
    @if (errorDangNhap != null)
    {
        <div class="alert alert-danger">@errorDangNhap</div>
    }
    <div class="main">
        <div class="main">
            <div class="container">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="login" style="text-align : center">
                    <div class="login-title"><h1>Đăng nhập</h1></div>
                    <div class="mb-3 row">
                        <div class="col-sm-2"></div>
                        <label for="Email" class="col-sm-2 col-form-label">Nhập tài khoản</label>
                        <div class="col-sm-5">
                            <InputText for="Email" class="form-control form-control-lg" @bind-Value="login.Email" ></InputText>
                            <div style="height:20px">
                                <ValidationMessage For="()=>login.Email"></ValidationMessage>
                                <small for="Email" class="text-danger"></small>
                            </div>
                            @*<input type="text" class="form-control" name="Email" />*@
                        </div>
                    </div>
                    <div class="mb-3 row">
                        <div class="col-sm-2"></div>
                        <label for="" class="col-sm-2 col-form-label">Nhập mật khẩu</label>
                        <div class="col-sm-5">
                            <InputText asp-for="MatKhau" class="form-control form-control-lg" @bind-Value="login.MatKhau" type="password"></InputText>
                            <div style="height:20px">
                                <ValidationMessage For="()=>login.MatKhau"></ValidationMessage>
                                <small for="MatKhau" class="text-danger"></small>
                            </div>
                            @*<input type="password" class="form-control" name="MatKhau" />*@
                        </div>
                    </div>
                    <button type="submit" class="btn btn-dark">
                        Đăng nhập hệ thống
                    </button>
                    <div class="dangKy">
                        Bạn chưa có tài khoản? <a href="dangky" class="textLogin">Đăng ký ngay</a>
                    </div>
                    <div class="quenMK">
                        <a href="quenmatkhau" class="textLogin">Bạn quên mật khẩu ?</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Login login = new Login();
    private List<KhachHang> khachHangs;
    private string errorDangNhap;

    private async Task OnLogin(EditContext editContext)
    {
        khachHangs = await services.GetAll<KhachHang>("https://localhost:7095/api/khachhangs/Get-All");
        var kh = khachHangs.FirstOrDefault(x => x.Email == login.Email && x.MatKhau == login.MatKhau);
        if (kh == null)
        {
            errorDangNhap = "Sai tài khoản hoặc mật khẩu";
        }
        else
        {
            var lstGH = await services.GetAll<GioHang>("https://localhost:7095/api/GioHangs/Get-All");
            var gh = lstGH.FirstOrDefault(x => x.IdKhachHang == kh.Id);
            //ví dụng về localStorage,sessionStorage
            //await JSRuntime.InvokeAsync<string>("sessionStorage.setItem", "idgh" , gh.Id.ToString());
            //string value = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "idgh");

            await JSRuntime.InvokeAsync<string>("sessionStorage.setItem", "idgh", gh.Id.ToString());
            await JSRuntime.InvokeAsync<string>("sessionStorage.setItem", "idkh", kh.Id.ToString());
            await JSRuntime.InvokeAsync<string>("sessionStorage.setItem", "ten", kh.Ten);
            navigation.NavigateTo("/",true);
        }
    }
}
