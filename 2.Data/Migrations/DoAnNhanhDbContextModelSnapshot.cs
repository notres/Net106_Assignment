// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2.Data.DbContexts;

#nullable disable

namespace _2.Data.Migrations
{
    [DbContext(typeof(DoAnNhanhDbContext))]
    partial class DoAnNhanhDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_2.Data.ModelsClass.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucVu", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fc0f38f-b421-4fef-8361-8136825aa354"),
                            Ten = "Nhân Viên"
                        },
                        new
                        {
                            Id = new Guid("26c5f722-3baa-4df7-b473-2374b39e02a2"),
                            Ten = "Quản lý"
                        });
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachHang");

                    b.ToTable("GioHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f7b6227-fd02-407a-8191-604739739697"),
                            IdKhachHang = new Guid("9fd94a59-1ab2-4eae-9654-767481e96bfe")
                        });
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("IdSanPham");

                    b.ToTable("GioHangChiTiet", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdKhachHang")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachHang");

                    b.HasIndex("IdNhanVien");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdSanPham");

                    b.ToTable("HoaDonChiTiet", (string)null);
                });

            modelBuilder.Entity("_2.Data.ModelsClass.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fd94a59-1ab2-4eae-9654-767481e96bfe"),
                            DiaChi = "hn",
                            Email = "tunght@fpt.edu.vn",
                            GioiTinh = true,
                            MatKhau = "123456",
                            Sdt = "0987654321",
                            Ten = "Tung"
                        });
                });

            modelBuilder.Entity("_2.Data.ModelsClass.Loai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Loai", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            Ten = "Áo nam",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("22516479-1dfe-4780-b8e0-85c885882aff"),
                            Ten = "Quần nam",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("_2.Data.ModelsClass.NhanVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdChucVu")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGuiBaoCao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGuiBcNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdChucVu");

                    b.HasIndex("IdGuiBcNavigationId");

                    b.ToTable("NhanVien", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b54e5b6d-2309-4844-99f6-50b18f665440"),
                            AnhNhanVien = "tien.png",
                            DiaChi = "hn",
                            Email = "tien@gmail.com",
                            GioiTinh = true,
                            IdChucVu = new Guid("26c5f722-3baa-4df7-b473-2374b39e02a2"),
                            MatKhau = "123456",
                            Sdt = "0987654322",
                            Ten = "tien",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("b764e8b0-fe90-42c5-95d3-b854620d274b"),
                            AnhNhanVien = "nga.png",
                            DiaChi = "hn",
                            Email = "nga@gmail.com",
                            GioiTinh = false,
                            IdChucVu = new Guid("6fc0f38f-b421-4fef-8361-8136825aa354"),
                            MatKhau = "123456",
                            Sdt = "0987654323",
                            Ten = "nga",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("_2.Data.ModelsClass.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdLoai")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdLoai");

                    b.ToTable("SanPham", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7cb5f225-8db2-4d48-9f73-68a42b78c1d2"),
                            GiaBan = 250000m,
                            GiaNhap = 200000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp1.jpg",
                            SoLuong = 10,
                            Ten = "Áo Blazer Nam CALIBER phong cách Hàn Quốc áo khoác nam cao cấp dáng vest năng động hai màu đen nâu Unisex AK01",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f30"),
                            GiaBan = 150000m,
                            GiaNhap = 100000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp2.jpg",
                            SoLuong = 10,
                            Ten = "Áo Len Nam Cổ Lọ Lông Cừu Cao Cấp Dày Dặn Mềm Mịn Cực Ấm Kiểu Dáng Hàn Quốc Form Rộng Faviti",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f31"),
                            GiaBan = 300000m,
                            GiaNhap = 250000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp3.jpg",
                            SoLuong = 10,
                            Ten = "Áo Thun Local Brand Unisex Teelab Premium Basic Tee TS063",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f32"),
                            GiaBan = 200000m,
                            GiaNhap = 150000m,
                            IdLoai = new Guid("22516479-1dfe-4780-b8e0-85c885882aff"),
                            LinkAnh = "sp4.jpg",
                            SoLuong = 10,
                            Ten = "Quần jean nam dài, quần bò nam màu đen chất co dãn thoải mái",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f33"),
                            GiaBan = 500000m,
                            GiaNhap = 450000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp5.jpg",
                            SoLuong = 10,
                            Ten = "Áo Hoodie Local Brand Unisex Teelab Special Collection Premium HD044",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f34"),
                            GiaBan = 200000m,
                            GiaNhap = 150000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp6.jpg",
                            SoLuong = 10,
                            Ten = "Áo Polo Local Brand Karants Essentials Polo Shirt Premium - KR15",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f35"),
                            GiaBan = 250000m,
                            GiaNhap = 200000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp7.jpg",
                            SoLuong = 10,
                            Ten = "Áo Thun Local Brand Unisex Karants Signature Logo Brand - KR03",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f36"),
                            GiaBan = 190000m,
                            GiaNhap = 150000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp8.jpg",
                            SoLuong = 10,
                            Ten = "Áo Thun Unisex Form Rộng Tay Lỡ IN NỔI Oversize Local Brand Karants 100% Cotton - KR13",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f37"),
                            GiaBan = 180000m,
                            GiaNhap = 150000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp9.jpg",
                            SoLuong = 10,
                            Ten = "Áo polo nam nữ local brand unisex Outerity Cá Sấu Cross - Italics / Màu Trắng&Đen Localbrand Outerity",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f38"),
                            GiaBan = 280000m,
                            GiaNhap = 250000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp10.jpg",
                            SoLuong = 10,
                            Ten = "Áo thun Local Brand Something AT Urban",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f39"),
                            GiaBan = 300000m,
                            GiaNhap = 250000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp11.jpg",
                            SoLuong = 10,
                            Ten = "Áo Polo Local Brand Unisex Karants Special Collection Premium - KR08",
                            TrangThai = true
                        },
                        new
                        {
                            Id = new Guid("f433cbcc-5300-45ce-bd6c-c41dc87b3f40"),
                            GiaBan = 200000m,
                            GiaNhap = 150000m,
                            IdLoai = new Guid("bc387d89-bebe-4897-baf0-0ea4e7028a13"),
                            LinkAnh = "sp12.jpg",
                            SoLuong = 10,
                            Ten = "Áo thun unisex MONSTER X STREET Mèo Lan Can phông tay lỡ nam nữ form rộng Local Brand",
                            TrangThai = true
                        });
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHang", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.KhachHang", "khachHang")
                        .WithMany("gioHangs")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khachHang");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHangChiTiet", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.GioHang", "gioHang")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdGioHang");

                    b.HasOne("_2.Data.ModelsClass.SanPham", "sanpham")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdSanPham");

                    b.Navigation("gioHang");

                    b.Navigation("sanpham");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDon", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.KhachHang", "khachHang")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.Data.ModelsClass.NhanVien", "nhanVien")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdNhanVien");

                    b.Navigation("khachHang");

                    b.Navigation("nhanVien");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDonChiTiet", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.HoaDon", "hoaDon")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdHoaDon");

                    b.HasOne("_2.Data.ModelsClass.SanPham", "sanpham")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdSanPham");

                    b.Navigation("hoaDon");

                    b.Navigation("sanpham");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.NhanVien", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.ChucVu", "chucVu")
                        .WithMany("nhanViens")
                        .HasForeignKey("IdChucVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2.Data.ModelsClass.NhanVien", "IdGuiBcNavigation")
                        .WithMany("InverseIdGuiBcNavigation")
                        .HasForeignKey("IdGuiBcNavigationId");

                    b.Navigation("IdGuiBcNavigation");

                    b.Navigation("chucVu");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.SanPham", b =>
                {
                    b.HasOne("_2.Data.ModelsClass.Loai", "loai")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("loai");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.ChucVu", b =>
                {
                    b.Navigation("nhanViens");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.GioHang", b =>
                {
                    b.Navigation("gioHangChiTiets");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.HoaDon", b =>
                {
                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.KhachHang", b =>
                {
                    b.Navigation("gioHangs");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.Loai", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.NhanVien", b =>
                {
                    b.Navigation("InverseIdGuiBcNavigation");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("_2.Data.ModelsClass.SanPham", b =>
                {
                    b.Navigation("gioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });
#pragma warning restore 612, 618
        }
    }
}
